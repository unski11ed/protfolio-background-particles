import t from"eventemitter3";import*as i from"fps-throttler";import{random as e}from"lodash";import*as s from"eases";import n,{}from"eases";class a{constructor(i,e){this.canvasElement=i,this.screenSize=e,this.events=new t,this.handleCanvasResize=()=>{const t=this.canvasElement.getBoundingClientRect();this.canvasElement.width=t.width,this.canvasElement.height=t.height,this.events.emit("screenResized")},this.canvasContext=i.getContext("2d"),"undefined"!=typeof window&&window.addEventListener("resize",this.handleCanvasResize),this.handleCanvasResize()}prepareScene(){this.canvasContext.fillStyle="#000",this.canvasContext.fillRect(0,0,this.screenSize.width,this.screenSize.height)}destroy(){"undefined"!=typeof window&&window.removeEventListener("resize",this.handleCanvasResize)}}class r{constructor(t){this.canvasElement=t}get width(){return this.canvasElement.width}get height(){return this.canvasElement.height}}var o;!function(t){t.Particle="element--particle",t.Ripple="element--ripple"}(o||(o={}));class c{constructor(t,i,e=.1){this.x=t,this.y=i,this.speed=e,this.type=o.Particle,this.size=1,this.opacity=.5,this.vX=0,this.vY=0}}class h{constructor(t,i){this.screenSize=t,this.particleBuilders=i,this.particles=[]}create(t=1){for(let i=0;i<t;i++){const t=new c(Math.random()*this.screenSize.width,Math.random()*this.screenSize.height);for(const i of this.particleBuilders)i.build(t);this.particles.push(t)}}destroy(t){const i=this.particles.indexOf(t);this.particles.splice(i,1)}}class p{constructor(t){this.canvasElement=t,this.canvasContext=t.getContext("2d")}}function l(t,i){t.beginPath(),t.fillStyle=i.color,t.arc(i.x,i.y,i.radius<0?0:i.radius,0,2*Math.PI),t.fill()}function m(t,i){return Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2))}function g(t,i){const e=i.x>t.width/2?i.x:t.width-i.x,s=i.y>t.height/2?i.y:t.height-i.y;return Math.sqrt(Math.pow(e,2)+Math.pow(s,2))}const u=(t,i)=>{for(let e of Object.keys(i))i[e]instanceof Object&&Object.assign(i[e],u(t[e],i[e]));return Object.assign(t||{},i),t},d="#fff";class f extends p{render(t){for(const i of t){const t=this.canvasContext.globalAlpha;this.canvasContext.globalAlpha=i.opacity,l(this.canvasContext,{color:d,x:i.x,y:i.y,radius:i.size/2}),this.canvasContext.globalAlpha=t}}}class y{constructor(t){this.gravitySource=t}build(t){const i=this.gravitySource.generatePointWithinRegion(),e=Math.sqrt(Math.pow(i.x-t.x,2)+Math.pow(i.y-t.y,2));t.vX=(t.x-i.x)/e,t.vY=(t.y-i.y)/e}}class x{constructor(t,i={}){this.propertyAnimation=t,this.options={spawnAnimationEasing:"cubicOut",spawnAnimationDuration:300,minSize:1,maxSize:4,minOpacity:.01,maxOpacity:.7,minSpeed:.001,maxSpeed:.1},Object.assign(this.options,i)}build(t){const i=e(this.options.minOpacity,this.options.maxOpacity,!0),s=e(this.options.minSize,this.options.maxSize);t.speed=e(this.options.minSpeed,this.options.maxSpeed,!0),this.propertyAnimation.animate(t,{opacity:[0,i],size:[0,s]},{functionName:this.options.spawnAnimationEasing,duration:this.options.spawnAnimationDuration})}}class v{constructor(t){this.gravityRegion=t}get region(){return this.gravityRegion}get center(){return{x:this.region.x+this.region.width/2,y:this.region.y+this.region.height/2}}setRegion(t){this.gravityRegion=t}generatePointWithinRegion(){return{x:this.gravityRegion.x+Math.random()*this.gravityRegion.width,y:this.gravityRegion.y+Math.random()*this.gravityRegion.height}}}const w=t=>(t,i)=>{t.x-=t.vX*t.speed,t.y-=t.vY*t.speed},S=t=>(i,e)=>{const{bounds:s,particles:n}=t;(i.x>s.width||i.x<0||i.y>s.height||i.y<0)&&(n.destroy(i),n.create(1))},C=t=>(i,e)=>{const s=Object.assign({minOpacity:.1,maxOpacity:.9,easing:"cubicIn"},t.particleConfig),{gravitySource:a,screenSize:r}=t,o=m(i,a.center),c=g(r,a.center),h=(c-o)/c,p=s.minOpacity+n[s.easing](h)*(s.maxOpacity-s.minOpacity);i.opacity=p};class z{constructor(t,i){this.modifiers=t,this.particles=i}update(t){for(const i of this.particles.particles)for(const e of this.modifiers)e(i,t)}}const O={duration:200,functionName:"linear"};class R{constructor(){this.animationStates=[]}animate(t,i,e={}){const n=Object.assign({},O,e);if("function"!=typeof s[n.functionName])throw Error(`Provided easing function name ${n.functionName} is not recognized.`);return new Promise(e=>{const s={element:t,startTime:Date.now(),params:i,options:n,finishResolver:e};this.animationStates.push(s)})}finishAnimation(t){const i=this.animationStates.find(i=>i.element===t);if(i){for(const e of Object.keys(i.params))t[e]=i.params[e][1];const e=this.animationStates.indexOf(i);this.animationStates.splice(e,1),i.finishResolver(i.element)}}update(t){for(const i of this.animationStates){const{element:e,startTime:n,params:a,options:r,finishResolver:o}=i;if(t>=n+r.duration)this.finishAnimation(e);else for(const i of Object.keys(a)){const[o,c]=a[i],h=(t-n)/r.duration,p=o+s[r.functionName](h)*(c-o);e[i]=p}}}}class b{constructor(t,i,e,s){this.particles=i,this.screenSize=e,this.propertyAnimation=s,this.startTime=0,this.rippleOrigin={x:0,y:0},this.animatedParticles=[],this.params={rippleAnimationDuration:1e3,rippleAnimationEasing:"cubicOut",particleAnimationDuration:75,particleAnimationEasing:"cubicOut",targetParticleOpacity:.8,targetParticleSize:4},Object.assign(this.params,t)}trigger(t){this.startTime=Date.now(),this.rippleOrigin=t,this.animatedParticles.length=0;for(const t of this.particles.particles)this.propertyAnimation.finishAnimation(t)}update(t){const{rippleAnimationDuration:i,rippleAnimationEasing:e,particleAnimationDuration:s,particleAnimationEasing:a,targetParticleOpacity:r,targetParticleSize:o}=this.params;if(this.startTime+i>t){const c=(t-this.startTime)/i,h=n[e](c)*g(this.screenSize,this.rippleOrigin);this.particles.particles.forEach(t=>(function(t,i,e,s){return new(e||(e=Promise))(function(n,a){function r(t){try{c(s.next(t))}catch(t){a(t)}}function o(t){try{c(s.throw(t))}catch(t){a(t)}}function c(t){t.done?n(t.value):new e(function(i){i(t.value)}).then(r,o)}c((s=s.apply(t,i||[])).next())})})(this,void 0,void 0,function*(){if(this.animatedParticles.indexOf(t)<0){if(m(t,this.rippleOrigin)<=h){const i=t.opacity,e=t.size,n={duration:s,easing:a};this.animatedParticles.push(t),yield this.propertyAnimation.animate(t,{opacity:[t.opacity,r],size:[t.size,o]},n),this.propertyAnimation.animate(t,{opacity:[t.opacity,i],size:[t.size,e]},n)}}}))}}}class A{constructor(t,i,e){this.params=t,this.screenSize=i,this.gravitySource=e,this.type=o.Ripple,this.x=0,this.y=0,this.canvasElement=null,this.canvasContext=null,this.startTime=0,this.originPoint={x:0,y:0},this.nextColor="#fff",this.animationInProgress=!1,"undefined"!=typeof document&&(this.canvasElement=document.createElement("canvas"),this.updateSize(),this.canvasContext=this.canvasElement.getContext("2d"),this.currentColor=t.initialColor,this.fillTexture({color:this.currentColor}))}get texture(){return this.canvasElement}updateSize(){this.canvasElement.width=this.screenSize.width,this.canvasElement.height=this.screenSize.height}trigger(t,i){this.startTime=Date.now(),this.animationInProgress=!0,this.currentColor=this.nextColor,this.nextColor=t,this.originPoint=i}update(t){const{duration:i,easingFunc:e}=this.params;if(this.animationInProgress)if(this.startTime+i>t){const s=(t-this.startTime)/i,a=n[e](s)*g(this.screenSize,this.originPoint);this.generateTexture(a)}else this.fillTexture({color:this.nextColor}),this.animationInProgress=!1}fillTexture(t){this.canvasContext.fillStyle=t.color,this.canvasContext.fillRect(0,0,this.screenSize.width,this.screenSize.height)}generateTexture(t){const{waveLength:i}=this.params;this.fillTexture({color:this.currentColor});const e=i/2,s=this.canvasContext.createRadialGradient(this.originPoint.x,this.originPoint.y,t-e<0?0:t-e,this.originPoint.x,this.originPoint.y,t+i);s.addColorStop(0,this.nextColor),s.addColorStop(.2,"#fff"),s.addColorStop(.8,"#fff"),s.addColorStop(1,this.currentColor),l(this.canvasContext,Object.assign({},this.originPoint,{radius:t+e,color:s}))}}class P extends p{render(t){const i=this.canvasContext.globalCompositeOperation;this.canvasContext.globalCompositeOperation="multiply",this.canvasContext.drawImage(t.texture,t.x,t.y),this.canvasContext.globalCompositeOperation=i}}const E={gravitySourceRect:{x:.75,y:.75,width:100,height:100},particleConfig:{minSize:1,maxSize:4,minOpacity:.1,maxOpacity:.9,minSpeed:.001,maxSpeed:.1,gravityOpacityFunc:"cubicOut"},rippleConfig:{rippleAnimationDuration:1e3,rippleAnimationEasing:"cubicOut",waveLength:300},initialColor:"hotpink",fpsLimit:30};export default class{constructor(e,s){this.events=new t;const n=this.options=u(E,s),o=this.screenSize=new r(e),c=this.screen=new a(e,o);this.particleRenderer=new f(e),this.rippleRenderer=new P(e);const p=this.propertyAnimation=new R,l=this.gravitySource=new v(Object.assign({},n.gravitySourceRect,{x:n.gravitySourceRect.x*o.width,y:n.gravitySourceRect.x*o.height})),m=new y(l),g=new x(p,n.particleConfig),d=this.particles=new h(o,[m,g]),O=w(),T=S({bounds:o,particles:d}),M=C({screenSize:o,gravitySource:l,particleConfig:s.particleConfig});this.particleUpdater=new z([O,T,M],d),this.rippleGenerator=new b(n.rippleConfig,d,o,p),this.rippleTexture=new A({duration:n.rippleConfig.rippleAnimationDuration,easingFunc:n.rippleConfig.rippleAnimationEasing,waveLength:n.rippleConfig.waveLength,initialColor:n.initialColor},o,l),this.fpsThrottler=new i(this.loop.bind(this),s.fpsLimit);const j=function(t=100){return i=>{clearTimeout(0),setTimeout(i,t)}}(300);c.events.on("screenResized",()=>{j(this.reset.bind(this))}),this.fpsThrottler.start()}createParticles(t){this.particles.create(t)}trigger(t,i){this.rippleGenerator.trigger(t),this.rippleTexture.trigger(i,t)}destroy(){this.fpsThrottler.stop(),this.screen.destroy()}reset(){this.rippleTexture.updateSize(),this.gravitySource.setRegion(Object.assign({},this.options.gravitySourceRect,{x:this.options.gravitySourceRect.x*this.screenSize.width,y:this.options.gravitySourceRect.x*this.screenSize.height}));for(const t of this.particles.particles)this.particles.destroy(t);this.events.emit("reset")}loop(){const t=Date.now();this.screen.prepareScene(),this.particleUpdater.update(t),this.rippleTexture.update(t),this.rippleGenerator.update(t),this.propertyAnimation.update(t),this.particleRenderer.render(this.particles.particles),this.rippleRenderer.render(this.rippleTexture)}}
